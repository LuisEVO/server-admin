// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int                       @id @default(autoincrement())
  dni                     String                    @unique
  email                   String                    @unique
  firstName               String
  lastName                String
  password                String
  isSuperuser             Boolean
  refreshToken  String?
  userPermission          UserPermission[]
  userRol                 UserRol[]
  Attendance              Attendance[]
  classroomSubjectTeacher ClassroomSubjectTeacher[]
}

model Rol {
  id            Int             @id @default(autoincrement())
  name          String
  rolPermission RolPermission[]
  userRol       UserRol[]
}

model Permission {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  rolPermission  RolPermission[]
  userPermission UserPermission[]
}

model UserRol {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  rol    Rol  @relation(fields: [rolId], references: [id])
  rolId  Int

  @@id([userId, rolId])
}

model RolPermission {
  rol          Rol        @relation(fields: [rolId], references: [id])
  rolId        Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@id([rolId, permissionId])
}

model UserPermission {
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@id([userId, permissionId])
}

model Student {
  id                      Int                       @id @default(autoincrement())
  dni                     String                    @unique
  firstName               String
  lastName                String
  classroomSubjectStudent ClassroomSubjectStudent[]
  attendanceDetail        AttendanceDetail[]
}

model Classroom {
  id               Int                @id @default(autoincrement())
  grade            String
  level            Int
  classroomSubject ClassroomSubject[]
}

model Subject {
  id               Int                @id @default(autoincrement())
  name             String
  classroomSubject ClassroomSubject[]
}

model ClassroomSubject {
  id                      Int                       @id @default(autoincrement())
  classroom               Classroom                 @relation(fields: [classroomId], references: [id])
  classroomId             Int
  subject                 Subject                   @relation(fields: [subjectId], references: [id])
  subjectId               Int
  classroomSubjectStudent ClassroomSubjectStudent[]
  classroomSubjectTeacher ClassroomSubjectTeacher[]
  attendance              Attendance[]

  @@unique([classroomId, subjectId])
}

model ClassroomSubjectTeacher {
  id                 Int              @id @default(autoincrement())
  classroomSubject   ClassroomSubject @relation(fields: [classroomSubjectId], references: [id])
  classroomSubjectId Int
  teacher            User             @relation(fields: [teacherId], references: [id])
  teacherId          Int

  @@unique([classroomSubjectId, teacherId])
}

model ClassroomSubjectStudent {
  id                 Int              @id @default(autoincrement())
  classroomSubject   ClassroomSubject @relation(fields: [classroomSubjectId], references: [id])
  classroomSubjectId Int
  student            Student          @relation(fields: [studentId], references: [id])
  studentId          Int

  @@unique([classroomSubjectId, studentId])
}

model Attendance {
  id                 Int                @id @default(autoincrement())
  date               DateTime
  classroomSubject   ClassroomSubject   @relation(fields: [classroomSubjectId], references: [id])
  classroomSubjectId Int
  teacher            User               @relation(fields: [teacherId], references: [id])
  teacherId          Int
  attendanceDetail   AttendanceDetail[]
}

model AttendanceDetail {
  id           Int        @id @default(autoincrement())
  attendance   Attendance @relation(fields: [attendanceId], references: [id])
  attendanceId Int
  student      Student    @relation(fields: [studentId], references: [id])
  studentId    Int
  status       String
}
